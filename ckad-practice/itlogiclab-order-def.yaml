apiVersion: v1
kind: Pod
metadata: 
  name: ckad-pod
  namespace: ckad
  labels:
    app: ckad-pod-app
    type: practice
spec: 
  serviceAccountName: ckad-sa
  volumes: 
    - name: ckad-volume
      hostPath: 
          path: "/Users/cpandey/dev/docker-data/ckad-practice/mount/challange/path"
  containers:
    - name: ckad-container
      image: busybox:1.28
      command: ["sh", "-i", "echo 'This is first pod >> file.txt'"]
      resources: 
         requests: 
            memory: 128Mi
            cpu: "0.5"
         limits: 
           memory: 256Mi
           cpu: "0.8"
      securityContext: 
         runAsUser: 10002
      ports: 
        - name: http
          protocol: TCP
          containerPort: 30000
      livenessProbe: 
         httpGet: 
            path: "/test/get"
            port: 30000
         initialDelaySeconds: 1000 
         periodSeconds: 300
      readinessProbe: 
          httpGet: 
           path: "/test/get"
           port: 30000
          initialDelaySeconds: 3000
          periodSeconds: 3000
      volumeMounts: 
        - name: ckad-volume
          mountPath: "/app/"  
      env: 
        - name: CKAD-ENV-1
          value: "CHANDAN"
        - name: CKAD-ENV-2
          valueFrom: 
            configMapKeyRef: 
               name: ckad-config-map
               key:  key-1

---
apiVersion: v1
kind: ServiceAccount
metadata: 
  name: ckad-sa
  namespace: ckad
automountServiceAccountToken: false

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metdata: 
  name: ckad-role
  namespace: ckad
rule: 
  - apiGroups: [""]
    resources: 
       - Pod
       - Service
    verb: 
      ["list", "get", "watch"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata: 
  name: ckad-role-binding
subject: 
   - apiGroup: rbac.authorization.k8s.io
     kind: User
     name: minikube
roleRef: 
   - apiGroup: rbac.authorization.k8s.io
     kind: Role 
     name: ckad-role  
 ##kubectl create configmap ckad-config-map --from-literal=key-1=configMap-value-1