apiVersion: v1
kind: Service
metadata: 
  name: vote-service
  namespace: vote
  labels: 
     app: vote-service
spec: 
  type: NodePort
  ports: 
    - targetPort: 80
      nodePort: 31000
      port: 5000
  selector: 
    app: vote-deployment



---
apiVersion:  apps/v1
kind: Deployment
metadata: 
  name: vote-deployment
  namespace: vote
  labels: 
    app: vote-deployment
spec: 
  replicas: 1
  selector:
   matchLabels: 
    app: vote-pod
  template: 
    metadata: 
      name: vote-pod
      labels: 
        app: vote-pod
    spec: 
      containers: 
        - name: vote-cotainer
          image: kodekloud/examplevotingapp_vote:before
          ports: 
            - name: container-port
              protocol: TCP
              containerPort: 80

---
apiVersion: v1
kind: Service
metadata: 
  name: redis
  namespace: vote
spec: 
  ports: 
    - targetPort: 6379
      port: 6379
  selector: 
    app: redis-deployment

---
apiVersion: apps/v1
kind: Deployment
metadata: 
  name: redis-deployment
  namespace: vote
spec: 
  replicas: 1
  selector: 
   matchLabels:  
    app: redis-pod
  template: 
    metadata: 
      name: redis-pod
      labels: 
        app: redis-pod
    spec: 
       containers: 
          - name: redis-pod
            image: redis:alpine
            volumeMounts:
                - name: redis-data
                  mountPath: "/data"
       volumes: 
          - name: redis-data
            emptyDir: {}
---
apiVersion: apps/v1
kind: Deployment
metadata: 
   name: worker
   namespace: vote
spec: 
   replicas: 1
   selector: 
    matchLabels:  
     app: worker-pod
   template: 
     metadata: 
        name: worker-pod
        labels:
           app: worker-pod
     spec: 
       containers: 
          - name: worker-container
            image:  kodekloud/examplevotingapp_worker
---
apiVersion: v1
kind: Service
metadata: 
  name: db
  namespace: vote
spec: 
   ports:
    - port: 5432
      targetPort: 5432
  
---
apiVersion: apps/v1
kind: Deployment
metadata: 
   name: db-deployment
   namespace: vote
spec: 
  replicas: 1
  selector: 
    matchLabels: 
     app: db-deployment-pod 
  template: 
    metadata: 
      name: db-deployment-pod
      namespace: vote
      labels: 
        app: db-deployment-pod
      
    spec: 
      containers: 
          - name: db-container
            image:  postgres:9.4
            env: 
              - name: POSTGRES_HOST_AUTH_METHOD
                value: trust
            volumeMounts:
               - name: db-data
                 mountPath: "/var/lib/postgresql/data"
      volumes: 
        - name: db-data
          emptyDir: {}  
---
apiVersion: apps/v1
kind: Deployment
metadata: 
   name: result-deployment
   namespace: vote
spec: 
  replicas: 1
  selector:
    matchLabels:  
      app: result-deployment-pod
  template: 
    metadata: 
      name: result-deployment-pod
      namespace: vote
      labels: 
         app: result-deployment-pod
    spec: 
      containers: 
          - name: result-container
            image: kodekloud/examplevotingapp_result:before

---
apiVersion: v1
kind: Service
metadata: 
  name: result-service
  namespace: vote
  labels: 
     app: result-service
spec: 
  type: NodePort
  ports: 
    - targetPort: 80
      nodePort: 31001
      port: 5001
 
              